# .github/workflows/docker-ci.yml
name: Docker CI / CD

on:
  push:
    branches: [ "dev", "master" ]   # build & test σε dev • build + deploy σε master
  pull_request:
    branches: [ "master" ]          # build & test σε PR προς master

jobs:
  # --------------------------------------------------------------------
  # 1) Build & Test – πάντα σε push (dev ή master) και σε pull‑request
  # --------------------------------------------------------------------
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker images
        run: docker compose build      # χρησιμοποιεί το docker‑compose.yml σου

      - name: Start DB service
        run: docker compose up -d db

      - name: Wait for MariaDB to be ready
        run: sleep 20

      - name: Run pytest tests inside web container
        run: docker compose run --rm web python -m pytest tests/

      - name: Tear down
        if: always()
        run: docker compose down --volumes

  # --------------------------------------------------------------------
  # 2) Deploy – ΜΟΝΟ σε push στο master ΚΑΙ μόνον αν πέρασε το test
  # --------------------------------------------------------------------
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Docker Hub login (username = skyypro, token από secrets)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}   # skyypro
          password: ${{ secrets.DOCKERHUB_TOKEN }}      # PAT με Write scope

      # Build & push image στο Docker Hub
      - name: Build & push web image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            skyypro/expense-tracker-web:latest
            skyypro/expense-tracker-web:${{ github.sha }}

      # (Προαιρετικό) SSH deploy στον production server
      # Γέμισε τα SERVER_* secrets αν θες αυτόματο restart
      - name: Deploy to production server via SSH
        if: ${{ secrets.SERVER_SSH_KEY != '' }}
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /path/to/expense-tracker
            docker pull skyypro/expense-tracker-web:latest
            docker compose up -d
